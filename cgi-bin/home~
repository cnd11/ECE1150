#!/usr/bin/perl -w

use strict;
use warnings;

use CGI::Carp qw/fatalsToBrowser/;
use CGI qw/standard/;
use CGI::Ajax;
use CGI::Session;

use Data::Dumper;

use File::Find;
use File::Basename;

use Auth;

use IO::Socket::INET;

my $remote_host = "192.168.1.41";
my $remote_port = 1501;

my $cgi  = CGI->new;
my $auth = Auth->new;
my $session = CGI::Session->new;

my $ajax = new CGI::Ajax( test_js => \&test_perl );

$ajax->register(fetch_js    => \&fetch_pl);
$ajax->register(search_file => \&search_pl);
$ajax->register(rename_file => \&rename_pl);
$ajax->register(delete_file => \&delete_pl);

my $name = $session->param( 'uname' );

my @files;

#find(\&wanted, "/var/www/data/$name");

my $dot_file;
open $dot_file,  "<", "/var/www/data/$name/.$name" or print "/var/www/data/$name/.$name \n";

@files = readline( $dot_file );

#@files = grep { -f $_ } @files;

my @path_show = grep { $_=~s/\/var\/www\/data//g  } @files;

@files = map { basename($_)  } @files;
@path_show = grep { chomp( $_ ) } @path_show;
my $full = "<table>";

foreach my $f (@path_show) {
    my $req = <<REQUEST;
	      <tr>
		<td>
		  <a id="$f" href="/data$f" target="_blank" download>$f</a>
		</td>
		<td>
		  <a class="request" onClick="fetch_js(['$f'],[fetch_file])"> Request </a> 
		</td>
		<td>
	    <a class="search" onClick="search_file(['search_term', '$f'],[search_file_res])" > Search </a> 
		</td>
		<td>
	    <a class="rename" onClick="rename_file(['rename_term', '$f'],[rename_file_res])" > Rename </a> 
		</td>
		<td>
	    <a class="delete" onClick="delete_file(['$f'],[delete_file_res])" > Delete </a> 
		</td>
	      </tr>
REQUEST

$full.= $req;
}
$full .= "</table>";

my $fl = join "<br>", @files;
#my $full = join "<br>", @path_show;


if ($auth->validate) {
    print $cgi->redirect(-URL =>'http://' . $ENV{SERVER_NAME} . '/cgi-bin/home');
} 

print $ajax->build_html($cgi, \&show_html);

sub wanted {
    push (@files, $File::Find::name);
    return;
}

sub test_perl
{
    my $upload = $cgi->upload('upload_file');
    return ("<p id='goAway'>THIS SHOULD DISAPPEAR!<p>" . $upload);
}

sub fetch_pl
{
    my $operation = "0";

    my $requested_file = shift;
    my $file_name =  $requested_file =~ s/.*?\///gr;

    my $user_name = $session->param('uname');

    my $requested_path = $requested_file =~ s/(.*\/).*$/$1/gr;
    $requested_path =~ s/\///;
    
    my $search_term = "n";
    my $new_filename = "n";

    my $socket = IO::Socket::INET->new( PeerAddr => $remote_host,
					PeerPort => $remote_port,
					Proto    => "tcp",
					Type     => SOCK_STREAM, )
	
	or return "Couldn't connect to $remote_host:$remote_port : $!\n";
   

    $socket->send( $operation . "\n" .
		   $requested_path . "\n" .
		   $file_name ."\n" .
		   $user_name . "\n" .
		   $search_term . "\n" .
		   $new_filename ."\n" )
	or return "Cannot Fetch File " . $!;

    my $res;
    close( $socket ); 

    return $operation . "\n" .
	   $requested_path . "\n" .
	   $file_name ."\n" .
	   $user_name . "\n" .
	   $search_term . "\n" .
	   $new_filename . "\n*" .
	   $res."*";
}

sub search_pl {
    my $search_str = shift;
    my $requested_file = shift;

    #return  $search_str . "\n" . $requested_file;
    my $operation = "2";
    my $file_name =  $requested_file =~ s/.*?\///gr;

    my $user_name = $session->param('uname');
    
    my $requested_path = $requested_file =~ s/(.*\/).*$/$1/gr;
    $requested_path =~ s/\///;
    
    my $new_filename = "n";

    my $socket = IO::Socket::INET->new( PeerAddr => $remote_host,
					PeerPort => $remote_port,
					Proto    => "tcp",
					Type     => SOCK_STREAM, )
	
	or return "Couldn't connect to $remote_host:$remote_port : $!\n";
   

    $socket->send( $operation . "\n" .
		   $requested_path . "\n" .
		   $file_name ."\n" .
		   $user_name . "\n" .
		   $search_str . "\n" .
		   $new_filename ."\n" )
	or return "Cannot Fetch File " . $!;

    my $res;
    $socket->read($res, 3);

    close( $socket ); 
    print "OK";
    return $operation . "\n" .
	   $requested_path . "\n" .
	   $file_name ."\n" .
	   $user_name . "\n" .
	   $search_str . "\n" .
	   $new_filename . "\n*" .
	   $res."*";
}

sub rename_pl {
    my $new_filename = shift;
    my $requested_file = shift;

    #return  $search_str . "\n" . $requested_file;
    my $operation = "3";
    my $file_name =  $requested_file =~ s/.*?\///gr;

    my $user_name = $session->param('uname');
    
    my $requested_path = $requested_file =~ s/(.*\/).*$/$1/gr;
    $requested_path =~ s/\///;
    
    my $search_str = "n";

    my $socket = IO::Socket::INET->new( PeerAddr => $remote_host,
					PeerPort => $remote_port,
					Proto    => "tcp",
					Type     => SOCK_STREAM, )
	
	or return "Couldn't connect to $remote_host:$remote_port : $!\n";
   

    $socket->send( $operation . "\n" .
		   $requested_path . "\n" .
		   $file_name ."\n" .
		   $user_name . "\n" .
		   $search_str . "\n" .
		   $new_filename ."\n" )
	or return "Cannot Fetch File " . $!;

    my $res;
    $socket->read($res, 3);
    
    close( $socket ); 

    return $operation . "\n" .
	   $requested_path . "\n" .
	   $file_name ."\n" .
	   $user_name . "\n" .
	   $search_str . "\n" .
	   $new_filename . "\n*" .	  
	   $res."*";
   
}

sub delete_pl
{
    my $operation = "4";

    my $requested_file = shift;
    my $file_name =  $requested_file =~ s/.*?\///gr;

    my $user_name = $session->param('uname');

    my $requested_path = $requested_file =~ s/(.*\/).*$/$1/gr;
    $requested_path =~ s/\///;
    
    my $search_term = "n";
    my $new_filename = "n";

    my $socket = IO::Socket::INET->new( PeerAddr => $remote_host,
					PeerPort => $remote_port,
					Proto    => "tcp",
					Type     => SOCK_STREAM, )
	
	or return "Couldn't connect to $remote_host:$remote_port : $!\n";
   

    $socket->send( $operation . "\n" .
		   $requested_path . "\n" .
		   $file_name ."\n" .
		   $user_name . "\n" .
		   $search_term . "\n" .
		   $new_filename ."\n" )
	or return "Cannot Fetch File " . $!;

    my $res;
    $socket->read($res, 3);

    close( $socket ); 

    return $operation . "\n" .
	   $requested_path . "\n" .
	   $file_name ."\n" .
	   $user_name . "\n" .
	   $search_term . "\n" .
	   $new_filename . "\n*" .
	   $res."*";
}

sub show_html 
{
return <<QED; 
<!DOCTYPE html>
  <html>
    <head>
      <link rel="stylesheet" type="text/css" href="/css/home.css" />
      <script type="text/javascript" src="/jquery-2.0.3.min.js"> </script>
      <script type="text/javascript" src="/js/home.js">  </script>
    </head>

    <body>	
      <div id="heading">
       <p> <span id="welcome">Welcome $name!</span></p>
       </div>
       
       <div id="serchRename">
         <input id="search_term" type="textarea" value="" placeHolder="Search"/> 
	 <input id="rename_term" type="textarea" value="" placeHolder="Rename" /> <br>
       </div>

       <div id="content">
	<span>
	  <br>
	  $full
	</span>
      </div>

      <p id="disp"> </p>
      
      <form enctype='multipart/form-data'>
	<input type='file'   id='file' name='upload_file' />
	<input type='button' id='submit_upload' value='Upload'/>
      </form>
      
      <p id="uploads">    </p>

    </body>
  </html>
QED
}
